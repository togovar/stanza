{"version":3,"file":"variant-frequency.js","sources":["../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/count.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/each.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/find.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/sum.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/sort.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/path.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/descendants.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/leaves.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/links.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/iterator.js","../../../home/runner/work/stanza/stanza/node_modules/d3-hierarchy/src/hierarchy/index.js","../../../home/runner/work/stanza/stanza/stanzas/variant-frequency/index.js"],"sourcesContent":["function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","import Stanza from \"togostanza/stanza\";\nimport { hierarchy } from 'd3-hierarchy';\nimport { DATASETS } from \"@/lib/constants\";\nimport { frequency } from \"@/lib/display\";\n\nexport default class VariantSummary extends Stanza {\n  async render() {\n    // font: Roboto Condensed\n    this.importWebFontCSS(\"https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400,700,900\");\n    // database icon\n    this.importWebFontCSS(new URL(\"./assets/fontello.css\", import.meta.url));\n\n    const { \"data-url\": urlBase, assembly, tgv_id } = this.params;\n    const dataURL = `${urlBase}/search?quality=0&term=${tgv_id}&expand_dataset`;\n    let resultObject = [];\n    let jgawgsData = [];\n    const hasjgawgsChildren = [false, false, false, false];\n    let jgawgsChildren;\n    let currentLayer1;\n    let hasHemizygote = false;\n    let uniqueIdCounter = 0;\n    const preparedDatasets = Object.values(prepareData().data.children);\n    preparedDatasets.forEach((dataset) => {\n      if (dataset.value === \"jga_wgs\") {\n        jgawgsChildren = dataset.children;\n      }\n    })\n    let isLogin = false;\n\n    try {\n      if (window.location.origin === 'http://localhost:8080') {\n        isLogin = false;\n      }\n\n      const timeout = new Promise((_, reject) =>\n        setTimeout(() => reject(new Error('Request timeout')), 10000)\n      );\n\n      const fetchPromise = fetch(`${window.location.origin}/auth/status`);\n      const response = await Promise.race([fetchPromise, timeout]);\n\n      if (response.status === 401 || response.status === 403) {\n        isLogin = false;\n      } else if (response.status === 200) {\n        isLogin = true;\n      }\n    } catch (error) {\n      console.error('Error fetching auth status or timeout occurred:', error);\n    }\n\n\n    try {\n      // dataURL に GET リクエストを送信\n      const response = await fetch(dataURL, {\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\"\n        }\n      });\n\n      // レスポンスのステータスをチェック\n      if (!response.ok) {\n        throw new Error(`${dataURL} returns status ${response.status}`);\n      }\n\n      // レスポンスを JSON 形式でパース\n      const responseDatasets = await response.json();\n      const frequenciesDatasets = responseDatasets.data[0]?.frequencies\n\n      /** Searches for and processes data, updating frequency datasets and result objects.\n      * @param {Object} datum - The current dataset object being processed. */\n      const searchData = (datum) => {\n        // 一致するデータを探す\n        const frequencyData = frequenciesDatasets?.find(x => x.source === datum.value);\n        if (frequencyData) {\n          // ID\n          frequencyData.id = datum.id\n          // 深さ\n          frequencyData.depth = datum.depth;\n          // 親ID\n          if (datum.depth > 0) {\n            frequencyData.parent_id = findParent(preparedDatasets, datum.id).id;\n          }\n          if (datum.depth > 1) {\n            frequencyData.grandparent_id = findParent(preparedDatasets, findParent(preparedDatasets, datum.id).id).id;\n          }\n\n          // バインディングにデータセット情報を追加\n          if (datum.value === 'tommo') {\n            switch (assembly) {\n              case \"GRCh37\":\n                frequencyData.dataset = \"ToMMo 8.3KJPN\";\n                break;\n              case \"GRCh38\":\n                frequencyData.dataset = \"ToMMo 54KJPN\";\n                break;\n            }\n          } else {\n            frequencyData.dataset = findTopParent(preparedDatasets, datum.id).label\n          }\n\n          // Population label\n          if ([\"gem_j_wga\", \"jga_wes\", \"tommo\", \"hgvd\"].includes(datum.value)) {\n            frequencyData.label = \"Japanese\";\n          } else if ([\"jga_wgs\", \"jga_snp\", \"ncbn\", \"gnomad_genomes\", \"gnomad_exomes\"].includes(datum.value)) {\n            frequencyData.label = \"Total\";\n          } else {\n            frequencyData.label = datum.label;\n          }\n\n          // 数値をロケール形式の文字列に変換する関数\n          const localeString = (v) => v !== undefined ? parseInt(v).toLocaleString() : null;\n          // Alt\n          frequencyData.ac = localeString(frequencyData.ac);\n          // Total\n          frequencyData.an = localeString(frequencyData.an);\n          // Alt/Alt\n          frequencyData.aac = localeString(frequencyData.aac);\n          // Alt/Ref\n          frequencyData.arc = localeString(frequencyData.arc);\n          // Alt/OtherAlts(JGA-WGSのみ)\n          frequencyData.aoc = localeString(frequencyData.aoc);\n          // Ref/Ref\n          frequencyData.rrc = localeString(frequencyData.rrc);\n          // Ref/OtherAlts(JGA-WGSのみ)\n          frequencyData.roc = localeString(frequencyData.roc);\n          // Other_Alts/Other_Alts(JGA-WGSのみ)\n          frequencyData.ooc = localeString(frequencyData.ooc);\n\n          if (!hasHemizygote && (frequencyData.hac !== undefined || frequencyData.hrc !== undefined || frequencyData.hoc !== undefined)) {\n            hasHemizygote = true;\n          }\n\n          // frequencyの情報をバインディングに追加\n          const ac = parseInt(frequencyData.ac);\n          const freq = parseFloat(frequencyData.af);\n          Object.assign(frequencyData, frequency(ac, freq));\n\n          // JGA-SNPの場合 見出しのdataがないため追加\n          if (frequencyData.dataset === 'JGA-SNP') {\n            if (currentLayer1 !== frequencyData.label) {\n              if (frequencyData.depth === 2 && currentLayer1 !== findParent(preparedDatasets, datum.id).label) {\n                let data = {\n                  dataset: frequencyData.dataset,\n                  depth: 1,\n                  label: findParent(preparedDatasets, datum.id).label,\n                  source: `${frequencyData.dataset}-title`,\n                  id: findParent(preparedDatasets, datum.id).id,\n                  has_child: true\n                };\n                resultObject = [...resultObject, data];\n                currentLayer1 = findParent(preparedDatasets, datum.id).label;\n              }\n            }\n          }\n\n          resultObject = [...resultObject, frequencyData];\n\n          if (!isLogin) {\n            if (frequencyData.source === \"jga_wgs\") {\n              jgawgsChildren.forEach(child => {\n                let data = {\n                  dataset: frequencyData.dataset,\n                  depth: 1,\n                  label: child.label,\n                  source: child.value,\n                  id: child.id,\n                  need_loading: true\n                };\n                jgawgsData = [...jgawgsData, data];\n              })\n            }\n          }\n        }\n\n        // Recursively search children\n        if (datum.children) {\n          datum.children.forEach(searchData);\n        }\n      };\n\n      // 各データセットに対して再帰的に探索を開始\n      preparedDatasets.forEach(searchData);\n\n      // JGA-WGSのデータを挿入\n      if (!isLogin) {\n        checkExistence(resultObject, jgawgsChildren);\n        insertObject(resultObject, hasjgawgsChildren, jgawgsData);\n      }\n\n      // クラス名を更新\n      updateHasChild(preparedDatasets, resultObject);\n\n      // 結果をレンダリング\n      this.renderTemplate({\n        template: \"stanza.html.hbs\",\n        parameters: {\n          params: this.params,\n          result: { resultObject },\n          hasHemizygote,\n        }\n      });\n\n    } catch (e) {\n      ({ error: { message: e.message } })\n    }\n\n    function addIdsToDataNodes(dataNodes, currentDepth = 0) {\n      return dataNodes.map((node) => {\n        // 各ノードに一意のIDを設定\n        const newNode = {\n          ...node,\n          id: `${uniqueIdCounter++}`,\n          depth: currentDepth\n        };\n\n        // 子ノードがある場合は再帰的に処理\n        if (newNode.children && newNode.children.length > 0) {\n          newNode.children = addIdsToDataNodes(newNode.children, currentDepth + 1);\n        }\n        return newNode;\n      });\n    }\n\n    function prepareData() {\n      const data = DATASETS\n      const dataWithIds = addIdsToDataNodes(data);\n      const hierarchyData = hierarchy({\n        id: '-1',\n        label: 'root',\n        value: '',\n        children: dataWithIds,\n      });\n      return hierarchyData;\n    }\n\n\n    /** Finds the top-level parent of a given node ID in a nested data structure.\n * @param {Array<Object>} data - The nested data structure to search.\n * @param {string} id - The ID of the node to find the top-level parent for.\n * @returns {Object|null} The top-level parent node or null if not found. */\n    function findTopParent(data, targetId) {\n      // 内部で再帰的に探索する関数\n      function recursiveSearch(nodes, targetId, parent = null) {\n        for (const node of nodes) {\n          if (node.id === targetId) {\n            // ターゲットIDが見つかったら、トップレベルの親を返す\n            return parent || node;\n          }\n          if (node.children) {\n            const found = recursiveSearch(node.children, targetId, parent || node);\n            if (found) {\n              return found;\n            }\n          }\n        }\n        return null;\n      }\n      return recursiveSearch(data, targetId);\n    }\n\n    /** Finds the direct parent of a given node ID in a nested data structure.\n    * @param {Array<Object>} data - The nested data structure to search.\n    * @param {string} id - The ID of the node to find the parent for.\n    * @returns {Object|null} The parent node or null if not found. */\n    function findParent(data, id) {\n      function recursiveSearch(nodes, targetId, parent = null) {\n        for (const node of nodes) {\n          if (node.id === targetId) {\n            // ターゲットIDが見つかったら、そのノードの親を返す\n            return parent;\n          }\n          if (node.children) {\n            const found = recursiveSearch(node.children, targetId, node);\n            if (found) {\n              return found;\n            }\n          }\n        }\n        return null;\n      }\n      return recursiveSearch(data, id);\n    }\n\n    // 存在確認を関数化\n    function checkExistence(resultObject, jgawgsChildren) {\n      resultObject.forEach((data) => {\n        jgawgsChildren.forEach((child, index) => {\n          if (data.source === child.value) {\n            hasjgawgsChildren[index] = true;\n          }\n        });\n      });\n    }\n\n    // オブジェクト挿入を関数化\n    function insertObject(resultObject, hasChildren, jgawgsData) {\n      hasChildren.forEach((exists, index) => {\n        if (!exists) {\n          resultObject.forEach((data, i) => {\n            if (data.id === (index + 1).toString()) {\n              resultObject.splice(i + 1, 0, jgawgsData[index]);\n            }\n          });\n        }\n      });\n    }\n\n    function updateHasChild(datasets, data) {\n      datasets.forEach(datum => {\n        // 現在のノードに対応するデータを取得\n        const dataNode = data.find(d => d.source === datum.value);\n        if (dataNode) {\n          dataNode.has_child = false;\n        }\n\n        if (datum.children?.length > 0 && dataNode) {\n          // 子供の一致を確認\n          const hasMatchingChild = datum.children.some(child =>\n            data.some(d => d.source === child.value)\n          );\n          const hasMatchingChildSub = datum.children.some(child =>\n            data.some(d => d.label === child.label)\n          );\n\n          if (hasMatchingChild || hasMatchingChildSub) {\n            dataNode.has_child = true;\n          }\n        }\n\n        // 子供を持つノードに対して再帰的に同じ処理を行う\n        if (datum.children && datum.children.length > 0) {\n          updateHasChild(datum.children, data);\n        }\n      });\n    };\n\n    // 以下トグルの開閉に関するイベント\n    const depth0Layer = this.root.querySelectorAll('.population[data-depth=\"0\"]');\n    depth0Layer.forEach((layer) =>\n      layer.addEventListener('click', (e) => {\n        e.target.classList.toggle('open');\n\n        // JGA-WGS\n        if (layer.dataset.dataset === 'JGA-WGS') {\n          const depth1Children = this.root.querySelectorAll(\n            '[data-dataset=\"JGA-WGS\"].population[data-depth=\"1\"]'\n          );\n          depth1Children.forEach((element) => {\n            element.parentElement.classList.toggle('show-by-total');\n          });\n        }\n\n        // JGA-SNP\n        if (layer.dataset.dataset === 'JGA-SNP') {\n          const depth1Children = this.root.querySelectorAll(\n            '[data-dataset=\"JGA-SNP\"].population[data-depth=\"1\"]'\n          )\n          depth1Children.forEach((element) => {\n            element.parentElement.classList.toggle('show-by-total');\n          });\n\n          const depth2Children = this.root.querySelectorAll('[data-dataset=\"JGA-SNP\"].population[data-depth=\"2\"]');\n          depth2Children.forEach((element) => {\n            if (element.parentElement.classList.contains('close-by-total')) {\n              element.parentElement.classList.remove('close-by-total');\n            } else if (element.parentElement.classList.contains('show-by-sub')) {\n              element.parentElement.classList.add('close-by-total');\n            }\n          });\n\n          // Male or Female\n          const depth3Children = this.root.querySelectorAll('[data-dataset=\"JGA-SNP\"].population[data-depth=\"3\"]');\n          depth3Children.forEach((element) => {\n            if (element.parentElement.classList.contains('close-by-total')) {\n              element.parentElement.classList.remove('close-by-total');\n            } else if (element.parentElement.classList.contains('show')) {\n              element.parentElement.classList.add('close-by-total');\n            }\n          });\n        }\n\n        // NCBN\n        if (layer.dataset.dataset === 'NCBN') {\n          const depth1Children = this.root.querySelectorAll(\n            '[data-dataset=\"NCBN\"].population[data-depth=\"1\"]'\n          );\n          depth1Children.forEach((element) => {\n            element.parentElement.classList.toggle('show-by-total');\n          });\n\n          const depth2Children = this.root.querySelectorAll(\n            '[data-dataset=\"NCBN\"].population[data-depth=\"2\"]'\n          );\n          depth2Children.forEach((element) => {\n            if (element.parentElement.classList.contains('close-by-total')) {\n              element.parentElement.classList.remove('close-by-total');\n            } else if (element.parentElement.classList.contains('show')) {\n              element.parentElement.classList.add('close-by-total');\n            }\n          });\n        }\n\n        // gnomAD Genomes\n        if (layer.dataset.dataset === 'gnomAD Genomes') {\n          const depth1Children = this.root.querySelectorAll(\n            '[data-dataset=\"gnomAD Genomes\"].population[data-depth=\"1\"]'\n          );\n          depth1Children.forEach((element) => {\n            element.parentElement.classList.toggle('show-by-total');\n          });\n        }\n\n        // gnomAD Exomes\n        if (layer.dataset.dataset === 'gnomAD Exomes') {\n          const depth1Children = this.root.querySelectorAll(\n            '[data-dataset=\"gnomAD Exomes\"].population[data-depth=\"1\"]'\n          );\n          depth1Children.forEach((element) => {\n            element.parentElement.classList.toggle('show-by-total');\n          });\n        }\n      })\n    );\n\n    const depth1Layer = this.root.querySelectorAll('.population[data-depth=\"1\"]');\n    depth1Layer.forEach((layer) =>\n      layer.addEventListener('click', (e) => {\n        e.target.classList.toggle('open');\n\n        // JGA-SNP\n        if (layer.dataset.dataset === 'JGA-SNP') {\n          const depth2Children = this.root.querySelectorAll(\n            `[data-dataset=\"JGA-SNP\"].population[data-parent-id=\"${layer.dataset.id}\"][data-depth=\"2\"]`\n          );\n          depth2Children.forEach((element) => {\n            element.parentElement.classList.toggle('show-by-sub');\n          });\n\n          // Male, Female\n          const depth3Children = this.root.querySelectorAll(\n            `[data-dataset=\"JGA-SNP\"].population[data-grandparent-id=\"${layer.dataset.id}\"][data-depth=\"3\"]`\n          );\n          depth3Children.forEach((element) => {\n            if (element.parentElement.classList.contains('close-by-sub')) {\n              element.parentElement.classList.remove('close-by-sub');\n            } else if (element.parentElement.classList.contains('show')) {\n              element.parentElement.classList.add('close-by-sub');\n            }\n          });\n        }\n\n        // NCBN\n        if (layer.dataset.dataset === 'NCBN') {\n          const depth2Children = this.root.querySelectorAll(\n            '[data-dataset=\"NCBN\"].population[data-depth=\"2\"]'\n          );\n          depth2Children.forEach((element) => {\n            element.parentElement.classList.toggle('show');\n          });\n        }\n      })\n    );\n\n    const depth2Layer = this.root.querySelectorAll('.population[data-depth=\"2\"]');\n    depth2Layer.forEach((layer) =>\n      layer.addEventListener('click', (e) => {\n        e.target.classList.toggle('open');\n\n        // JGA-SNP\n        if (layer.dataset.dataset === 'JGA-SNP') {\n          const depth3Children = this.root.querySelectorAll(\n            `[data-dataset=\"JGA-SNP\"].population[data-parent-id=\"${layer.dataset.id}\"][data-depth=\"3\"]`\n          );\n          depth3Children.forEach((element) => {\n            element.parentElement.classList.toggle('show');\n          });\n        }\n      })\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,KAAK,CAAC,IAAI,EAAE;AACrB,EAAE,IAAI,GAAG,GAAG,CAAC;AACb,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAC9B,MAAM,CAAC,GAAG,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC;AACtC,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;AAClB,OAAO,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AACjD,EAAE,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AACnB,CAAC;AACD;AACe,mBAAQ,GAAG;AAC1B,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC/B;;ACXe,kBAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE;AACxC,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AACjB,EAAE,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;AAC3B,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC7C,GAAG;AACH,EAAE,OAAO,IAAI,CAAC;AACd;;ACNe,wBAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE;AACxC,EAAE,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAC3D,EAAE,OAAO,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE;AAC7B,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC7C,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;AAClC,MAAM,KAAK,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AACjD,QAAQ,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,OAAO,IAAI,CAAC;AACd;;ACXe,uBAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE;AACxC,EAAE,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AACzE,EAAE,OAAO,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE;AAC7B,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;AAClC,MAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AACnD,QAAQ,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,OAAO,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;AAC5B,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC7C,GAAG;AACH,EAAE,OAAO,IAAI,CAAC;AACd;;ACde,kBAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE;AACxC,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AACjB,EAAE,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;AAC3B,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE;AAClD,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL,GAAG;AACH;;ACPe,iBAAQ,CAAC,KAAK,EAAE;AAC/B,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,IAAI,EAAE;AACvC,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACpC,QAAQ,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAChC,QAAQ,CAAC,GAAG,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC;AACxC,IAAI,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAC9C,IAAI,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AACrB,GAAG,CAAC,CAAC;AACL;;ACRe,kBAAQ,CAAC,OAAO,EAAE;AACjC,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI,EAAE;AACxC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClC,KAAK;AACL,GAAG,CAAC,CAAC;AACL;;ACNe,kBAAQ,CAAC,GAAG,EAAE;AAC7B,EAAE,IAAI,KAAK,GAAG,IAAI;AAClB,MAAM,QAAQ,GAAG,mBAAmB,CAAC,KAAK,EAAE,GAAG,CAAC;AAChD,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AACtB,EAAE,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC7B,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;AACzB,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtB,GAAG;AACH,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;AACvB,EAAE,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC3B,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5B,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AACrB,GAAG;AACH,EAAE,OAAO,KAAK,CAAC;AACf,CAAC;AACD;AACA,SAAS,mBAAmB,CAAC,CAAC,EAAE,CAAC,EAAE;AACnC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;AACxB,EAAE,IAAI,MAAM,GAAG,CAAC,CAAC,SAAS,EAAE;AAC5B,MAAM,MAAM,GAAG,CAAC,CAAC,SAAS,EAAE;AAC5B,MAAM,CAAC,GAAG,IAAI,CAAC;AACf,EAAE,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;AACnB,EAAE,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;AACnB,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE;AAClB,IAAI,CAAC,GAAG,CAAC,CAAC;AACV,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;AACrB,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;AACrB,GAAG;AACH,EAAE,OAAO,CAAC,CAAC;AACX;;AC7Be,uBAAQ,GAAG;AAC1B,EAAE,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;AAClC,EAAE,OAAO,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE;AAC7B,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrB,GAAG;AACH,EAAE,OAAO,KAAK,CAAC;AACf;;ACNe,yBAAQ,GAAG;AAC1B,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B;;ACFe,oBAAQ,GAAG;AAC1B,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;AAClB,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI,EAAE;AACjC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACxB,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxB,KAAK;AACL,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,MAAM,CAAC;AAChB;;ACRe,mBAAQ,GAAG;AAC1B,EAAE,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,EAAE,CAAC;AAC9B,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE;AAC3B,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;AACvB,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;AACtD,KAAK;AACL,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,KAAK,CAAC;AACf;;ACRe,uBAAS,GAAG;AAC3B,EAAE,IAAI,IAAI,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;AAC1D,EAAE,GAAG;AACL,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC;AACxC,IAAI,OAAO,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,EAAE;AACjC,MAAM,MAAM,IAAI,CAAC;AACjB,MAAM,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;AACpC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AACrD,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG,QAAQ,IAAI,CAAC,MAAM,EAAE;AACxB;;ACCe,SAAS,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAE;AAClD,EAAE,IAAI,IAAI,YAAY,GAAG,EAAE;AAC3B,IAAI,IAAI,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC7B,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE,QAAQ,GAAG,WAAW,CAAC;AACvD,GAAG,MAAM,IAAI,QAAQ,KAAK,SAAS,EAAE;AACrC,IAAI,QAAQ,GAAG,cAAc,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;AAC3B,MAAM,IAAI;AACV,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC;AACpB,MAAM,KAAK;AACX,MAAM,MAAM;AACZ,MAAM,CAAC;AACP,MAAM,CAAC,CAAC;AACR;AACA,EAAE,OAAO,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE;AAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE;AACtF,MAAM,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;AAC7B,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AACnC,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,QAAQ,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;AAC5B,QAAQ,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACrC,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AACxC,CAAC;AACD;AACA,SAAS,SAAS,GAAG;AACrB,EAAE,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC9C,CAAC;AACD;AACA,SAAS,cAAc,CAAC,CAAC,EAAE;AAC3B,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC;AACpB,CAAC;AACD;AACA,SAAS,WAAW,CAAC,CAAC,EAAE;AACxB,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACxC,CAAC;AACD;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE;AACxB,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AAClE,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7B,CAAC;AACD;AACO,SAAS,aAAa,CAAC,IAAI,EAAE;AACpC,EAAE,IAAI,MAAM,GAAG,CAAC,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC1B,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,MAAM,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE;AAC3D,CAAC;AACD;AACO,SAAS,IAAI,CAAC,IAAI,EAAE;AAC3B,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB,EAAE,IAAI,CAAC,KAAK;AACZ,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAClB,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACrB,CAAC;AACD;AACA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,GAAG;AACvC,EAAE,WAAW,EAAE,IAAI;AACnB,EAAE,KAAK,EAAE,UAAU;AACnB,EAAE,IAAI,EAAE,SAAS;AACjB,EAAE,SAAS,EAAE,cAAc;AAC3B,EAAE,UAAU,EAAE,eAAe;AAC7B,EAAE,IAAI,EAAE,SAAS;AACjB,EAAE,GAAG,EAAE,QAAQ;AACf,EAAE,IAAI,EAAE,SAAS;AACjB,EAAE,IAAI,EAAE,SAAS;AACjB,EAAE,SAAS,EAAE,cAAc;AAC3B,EAAE,WAAW,EAAE,gBAAgB;AAC/B,EAAE,MAAM,EAAE,WAAW;AACrB,EAAE,KAAK,EAAE,UAAU;AACnB,EAAE,IAAI,EAAE,SAAS;AACjB,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,aAAa;AAClC,CAAC;;ACrFc,MAAM,cAAc,SAAS,MAAM,CAAC;AACnD,EAAE,MAAM,MAAM,GAAG;AACjB;AACA,IAAI,IAAI,CAAC,gBAAgB,CAAC,0EAA0E,CAAC,CAAC;AACtG;AACA,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7E;AACA,IAAI,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AAClE,IAAI,MAAM,OAAO,GAAG,CAAC,EAAE,OAAO,CAAC,uBAAuB,EAAE,MAAM,CAAC,eAAe,CAAC,CAAC;AAChF,IAAI,IAAI,YAAY,GAAG,EAAE,CAAC;AAC1B,IAAI,IAAI,UAAU,GAAG,EAAE,CAAC;AACxB,IAAI,MAAM,iBAAiB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3D,IAAI,IAAI,cAAc,CAAC;AACvB,IAAI,IAAI,aAAa,CAAC;AACtB,IAAI,IAAI,aAAa,GAAG,KAAK,CAAC;AAC9B,IAAI,IAAI,eAAe,GAAG,CAAC,CAAC;AAC5B,IAAI,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxE,IAAI,gBAAgB,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC1C,MAAM,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE;AACvC,QAAQ,cAAc,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC1C,OAAO;AACP,KAAK,EAAC;AACN,IAAI,IAAI,OAAO,GAAG,KAAK,CAAC;AACxB;AACA,IAAI,IAAI;AACR,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,uBAAuB,EAAE;AAC9D,QAAQ,OAAO,GAAG,KAAK,CAAC;AACxB,OAAO;AACP;AACA,MAAM,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM;AAC5C,QAAQ,UAAU,CAAC,MAAM,MAAM,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,EAAE,KAAK,CAAC;AACrE,OAAO,CAAC;AACR;AACA,MAAM,MAAM,YAAY,GAAG,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;AAC1E,MAAM,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;AACnE;AACA,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AAC9D,QAAQ,OAAO,GAAG,KAAK,CAAC;AACxB,OAAO,MAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AAC1C,QAAQ,OAAO,GAAG,IAAI,CAAC;AACvB,OAAO;AACP,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,MAAM,OAAO,CAAC,KAAK,CAAC,iDAAiD,EAAE,KAAK,CAAC,CAAC;AAC9E,KAAK;AACL;AACA;AACA,IAAI,IAAI;AACR;AACA,MAAM,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,OAAO,EAAE;AAC5C,QAAQ,MAAM,EAAE,KAAK;AACrB,QAAQ,OAAO,EAAE;AACjB,UAAU,QAAQ,EAAE,kBAAkB;AACtC,SAAS;AACT,OAAO,CAAC,CAAC;AACT;AACA;AACA,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;AACxB,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,gBAAgB,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACxE,OAAO;AACP;AACA;AACA,MAAM,MAAM,gBAAgB,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AACrD,MAAM,MAAM,mBAAmB,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,YAAW;AACvE;AACA;AACA;AACA,MAAM,MAAM,UAAU,GAAG,CAAC,KAAK,KAAK;AACpC;AACA,QAAQ,MAAM,aAAa,GAAG,mBAAmB,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC;AACvF,QAAQ,IAAI,aAAa,EAAE;AAC3B;AACA,UAAU,aAAa,CAAC,EAAE,GAAG,KAAK,CAAC,GAAE;AACrC;AACA,UAAU,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC5C;AACA,UAAU,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE;AAC/B,YAAY,aAAa,CAAC,SAAS,GAAG,UAAU,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;AAChF,WAAW;AACX,UAAU,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE;AAC/B,YAAY,aAAa,CAAC,cAAc,GAAG,UAAU,CAAC,gBAAgB,EAAE,UAAU,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;AACtH,WAAW;AACX;AACA;AACA,UAAU,IAAI,KAAK,CAAC,KAAK,KAAK,OAAO,EAAE;AACvC,YAAY,QAAQ,QAAQ;AAC5B,cAAc,KAAK,QAAQ;AAC3B,gBAAgB,aAAa,CAAC,OAAO,GAAG,eAAe,CAAC;AACxD,gBAAgB,MAAM;AACtB,cAAc,KAAK,QAAQ;AAC3B,gBAAgB,aAAa,CAAC,OAAO,GAAG,cAAc,CAAC;AACvD,gBAAgB,MAAM;AACtB,aAAa;AACb,WAAW,MAAM;AACjB,YAAY,aAAa,CAAC,OAAO,GAAG,aAAa,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,MAAK;AACnF,WAAW;AACX;AACA;AACA,UAAU,IAAI,CAAC,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;AAC/E,YAAY,aAAa,CAAC,KAAK,GAAG,UAAU,CAAC;AAC7C,WAAW,MAAM,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,gBAAgB,EAAE,eAAe,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;AAC9G,YAAY,aAAa,CAAC,KAAK,GAAG,OAAO,CAAC;AAC1C,WAAW,MAAM;AACjB,YAAY,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC9C,WAAW;AACX;AACA;AACA,UAAU,MAAM,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC;AAC5F;AACA,UAAU,aAAa,CAAC,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AAC5D;AACA,UAAU,aAAa,CAAC,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AAC5D;AACA,UAAU,aAAa,CAAC,GAAG,GAAG,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC9D;AACA,UAAU,aAAa,CAAC,GAAG,GAAG,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC9D;AACA,UAAU,aAAa,CAAC,GAAG,GAAG,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC9D;AACA,UAAU,aAAa,CAAC,GAAG,GAAG,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC9D;AACA,UAAU,aAAa,CAAC,GAAG,GAAG,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC9D;AACA,UAAU,aAAa,CAAC,GAAG,GAAG,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC9D;AACA,UAAU,IAAI,CAAC,aAAa,KAAK,aAAa,CAAC,GAAG,KAAK,SAAS,IAAI,aAAa,CAAC,GAAG,KAAK,SAAS,IAAI,aAAa,CAAC,GAAG,KAAK,SAAS,CAAC,EAAE;AACzI,YAAY,aAAa,GAAG,IAAI,CAAC;AACjC,WAAW;AACX;AACA;AACA,UAAU,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AAChD,UAAU,MAAM,IAAI,GAAG,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AACpD,UAAU,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;AAC5D;AACA;AACA,UAAU,IAAI,aAAa,CAAC,OAAO,KAAK,SAAS,EAAE;AACnD,YAAY,IAAI,aAAa,KAAK,aAAa,CAAC,KAAK,EAAE;AACvD,cAAc,IAAI,aAAa,CAAC,KAAK,KAAK,CAAC,IAAI,aAAa,KAAK,UAAU,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE;AAC/G,gBAAgB,IAAI,IAAI,GAAG;AAC3B,kBAAkB,OAAO,EAAE,aAAa,CAAC,OAAO;AAChD,kBAAkB,KAAK,EAAE,CAAC;AAC1B,kBAAkB,KAAK,EAAE,UAAU,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK;AACrE,kBAAkB,MAAM,EAAE,CAAC,EAAE,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC;AAC1D,kBAAkB,EAAE,EAAE,UAAU,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;AAC/D,kBAAkB,SAAS,EAAE,IAAI;AACjC,iBAAiB,CAAC;AAClB,gBAAgB,YAAY,GAAG,CAAC,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC;AACvD,gBAAgB,aAAa,GAAG,UAAU,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC;AAC7E,eAAe;AACf,aAAa;AACb,WAAW;AACX;AACA,UAAU,YAAY,GAAG,CAAC,GAAG,YAAY,EAAE,aAAa,CAAC,CAAC;AAC1D;AACA,UAAU,IAAI,CAAC,OAAO,EAAE;AACxB,YAAY,IAAI,aAAa,CAAC,MAAM,KAAK,SAAS,EAAE;AACpD,cAAc,cAAc,CAAC,OAAO,CAAC,KAAK,IAAI;AAC9C,gBAAgB,IAAI,IAAI,GAAG;AAC3B,kBAAkB,OAAO,EAAE,aAAa,CAAC,OAAO;AAChD,kBAAkB,KAAK,EAAE,CAAC;AAC1B,kBAAkB,KAAK,EAAE,KAAK,CAAC,KAAK;AACpC,kBAAkB,MAAM,EAAE,KAAK,CAAC,KAAK;AACrC,kBAAkB,EAAE,EAAE,KAAK,CAAC,EAAE;AAC9B,kBAAkB,YAAY,EAAE,IAAI;AACpC,iBAAiB,CAAC;AAClB,gBAAgB,UAAU,GAAG,CAAC,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;AACnD,eAAe,EAAC;AAChB,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,QAAQ,EAAE;AAC5B,UAAU,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC7C,SAAS;AACT,OAAO,CAAC;AACR;AACA;AACA,MAAM,gBAAgB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC3C;AACA;AACA,MAAM,IAAI,CAAC,OAAO,EAAE;AACpB,QAAQ,cAAc,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;AACrD,QAAQ,YAAY,CAAC,YAAY,EAAE,iBAAiB,EAAE,UAAU,CAAC,CAAC;AAClE,OAAO;AACP;AACA;AACA,MAAM,cAAc,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;AACrD;AACA;AACA,MAAM,IAAI,CAAC,cAAc,CAAC;AAC1B,QAAQ,QAAQ,EAAE,iBAAiB;AACnC,QAAQ,UAAU,EAAE;AACpB,UAAU,MAAM,EAAE,IAAI,CAAC,MAAM;AAC7B,UAAU,MAAM,EAAE,EAAE,YAAY,EAAE;AAClC,UAAU,aAAa;AACvB,SAAS;AACT,OAAO,CAAC,CAAC;AACT;AACA,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE,EAAC;AACzC,KAAK;AACL;AACA,IAAI,SAAS,iBAAiB,CAAC,SAAS,EAAE,YAAY,GAAG,CAAC,EAAE;AAC5D,MAAM,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK;AACrC;AACA,QAAQ,MAAM,OAAO,GAAG;AACxB,UAAU,GAAG,IAAI;AACjB,UAAU,EAAE,EAAE,CAAC,EAAE,eAAe,EAAE,CAAC,CAAC;AACpC,UAAU,KAAK,EAAE,YAAY;AAC7B,SAAS,CAAC;AACV;AACA;AACA,QAAQ,IAAI,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7D,UAAU,OAAO,CAAC,QAAQ,GAAG,iBAAiB,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,GAAG,CAAC,CAAC,CAAC;AACnF,SAAS;AACT,QAAQ,OAAO,OAAO,CAAC;AACvB,OAAO,CAAC,CAAC;AACT,KAAK;AACL;AACA,IAAI,SAAS,WAAW,GAAG;AAC3B,MAAM,MAAM,IAAI,GAAG,SAAQ;AAC3B,MAAM,MAAM,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;AAClD,MAAM,MAAM,aAAa,GAAG,SAAS,CAAC;AACtC,QAAQ,EAAE,EAAE,IAAI;AAChB,QAAQ,KAAK,EAAE,MAAM;AACrB,QAAQ,KAAK,EAAE,EAAE;AACjB,QAAQ,QAAQ,EAAE,WAAW;AAC7B,OAAO,CAAC,CAAC;AACT,MAAM,OAAO,aAAa,CAAC;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,aAAa,CAAC,IAAI,EAAE,QAAQ,EAAE;AAC3C;AACA,MAAM,SAAS,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,GAAG,IAAI,EAAE;AAC/D,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAClC,UAAU,IAAI,IAAI,CAAC,EAAE,KAAK,QAAQ,EAAE;AACpC;AACA,YAAY,OAAO,MAAM,IAAI,IAAI,CAAC;AAClC,WAAW;AACX,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC7B,YAAY,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,IAAI,IAAI,CAAC,CAAC;AACnF,YAAY,IAAI,KAAK,EAAE;AACvB,cAAc,OAAO,KAAK,CAAC;AAC3B,aAAa;AACb,WAAW;AACX,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP,MAAM,OAAO,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC7C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE;AAClC,MAAM,SAAS,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,GAAG,IAAI,EAAE;AAC/D,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAClC,UAAU,IAAI,IAAI,CAAC,EAAE,KAAK,QAAQ,EAAE;AACpC;AACA,YAAY,OAAO,MAAM,CAAC;AAC1B,WAAW;AACX,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC7B,YAAY,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AACzE,YAAY,IAAI,KAAK,EAAE;AACvB,cAAc,OAAO,KAAK,CAAC;AAC3B,aAAa;AACb,WAAW;AACX,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO;AACP,MAAM,OAAO,eAAe,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACvC,KAAK;AACL;AACA;AACA,IAAI,SAAS,cAAc,CAAC,YAAY,EAAE,cAAc,EAAE;AAC1D,MAAM,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AACrC,QAAQ,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,KAAK;AACjD,UAAU,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,KAAK,EAAE;AAC3C,YAAY,iBAAiB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;AAC5C,WAAW;AACX,SAAS,CAAC,CAAC;AACX,OAAO,CAAC,CAAC;AACT,KAAK;AACL;AACA;AACA,IAAI,SAAS,YAAY,CAAC,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE;AACjE,MAAM,WAAW,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,KAAK;AAC7C,QAAQ,IAAI,CAAC,MAAM,EAAE;AACrB,UAAU,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK;AAC5C,YAAY,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE;AACpD,cAAc,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/D,aAAa;AACb,WAAW,CAAC,CAAC;AACb,SAAS;AACT,OAAO,CAAC,CAAC;AACT,KAAK;AACL;AACA,IAAI,SAAS,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE;AAC5C,MAAM,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI;AAChC;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC;AAClE,QAAQ,IAAI,QAAQ,EAAE;AACtB,UAAU,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;AACrC,SAAS;AACT;AACA,QAAQ,IAAI,KAAK,CAAC,QAAQ,EAAE,MAAM,GAAG,CAAC,IAAI,QAAQ,EAAE;AACpD;AACA,UAAU,MAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;AAC5D,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,KAAK,CAAC;AACpD,WAAW,CAAC;AACZ,UAAU,MAAM,mBAAmB,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;AAC/D,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC;AACnD,WAAW,CAAC;AACZ;AACA,UAAU,IAAI,gBAAgB,IAAI,mBAAmB,EAAE;AACvD,YAAY,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;AACtC,WAAW;AACX,SAAS;AACT;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACzD,UAAU,cAAc,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC/C,SAAS;AACT,OAAO,CAAC,CAAC;AACT,KACA;AACA;AACA,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,CAAC;AAClF,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK;AAC9B,MAAM,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK;AAC7C,QAAQ,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC1C;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;AACjD,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;AAC3D,YAAY,qDAAqD;AACjE,WAAW,CAAC;AACZ,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACpE,WAAW,CAAC,CAAC;AACb,SAAS;AACT;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;AACjD,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;AAC3D,YAAY,qDAAqD;AACjE,YAAW;AACX,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACpE,WAAW,CAAC,CAAC;AACb;AACA,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,qDAAqD,CAAC,CAAC;AACnH,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,IAAI,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;AAC5E,cAAc,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACvE,aAAa,MAAM,IAAI,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AAChF,cAAc,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACpE,aAAa;AACb,WAAW,CAAC,CAAC;AACb;AACA;AACA,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,qDAAqD,CAAC,CAAC;AACnH,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,IAAI,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;AAC5E,cAAc,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACvE,aAAa,MAAM,IAAI,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACzE,cAAc,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACpE,aAAa;AACb,WAAW,CAAC,CAAC;AACb,SAAS;AACT;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,KAAK,MAAM,EAAE;AAC9C,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;AAC3D,YAAY,kDAAkD;AAC9D,WAAW,CAAC;AACZ,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACpE,WAAW,CAAC,CAAC;AACb;AACA,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;AAC3D,YAAY,kDAAkD;AAC9D,WAAW,CAAC;AACZ,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,IAAI,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;AAC5E,cAAc,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACvE,aAAa,MAAM,IAAI,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACzE,cAAc,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACpE,aAAa;AACb,WAAW,CAAC,CAAC;AACb,SAAS;AACT;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,KAAK,gBAAgB,EAAE;AACxD,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;AAC3D,YAAY,4DAA4D;AACxE,WAAW,CAAC;AACZ,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACpE,WAAW,CAAC,CAAC;AACb,SAAS;AACT;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,KAAK,eAAe,EAAE;AACvD,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;AAC3D,YAAY,2DAA2D;AACvE,WAAW,CAAC;AACZ,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACpE,WAAW,CAAC,CAAC;AACb,SAAS;AACT,OAAO,CAAC;AACR,KAAK,CAAC;AACN;AACA,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,CAAC;AAClF,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK;AAC9B,MAAM,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK;AAC7C,QAAQ,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC1C;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;AACjD,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;AAC3D,YAAY,CAAC,oDAAoD,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,kBAAkB,CAAC;AACvG,WAAW,CAAC;AACZ,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AAClE,WAAW,CAAC,CAAC;AACb;AACA;AACA,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;AAC3D,YAAY,CAAC,yDAAyD,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,kBAAkB,CAAC;AAC5G,WAAW,CAAC;AACZ,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,IAAI,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;AAC1E,cAAc,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACrE,aAAa,MAAM,IAAI,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACzE,cAAc,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAClE,aAAa;AACb,WAAW,CAAC,CAAC;AACb,SAAS;AACT;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,KAAK,MAAM,EAAE;AAC9C,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;AAC3D,YAAY,kDAAkD;AAC9D,WAAW,CAAC;AACZ,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3D,WAAW,CAAC,CAAC;AACb,SAAS;AACT,OAAO,CAAC;AACR,KAAK,CAAC;AACN;AACA,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,CAAC;AAClF,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK;AAC9B,MAAM,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK;AAC7C,QAAQ,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC1C;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;AACjD,UAAU,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB;AAC3D,YAAY,CAAC,oDAAoD,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,kBAAkB,CAAC;AACvG,WAAW,CAAC;AACZ,UAAU,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AAC9C,YAAY,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3D,WAAW,CAAC,CAAC;AACb,SAAS;AACT,OAAO,CAAC;AACR,KAAK,CAAC;AACN,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
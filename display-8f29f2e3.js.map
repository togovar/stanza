{"version":3,"file":"display-8f29f2e3.js","sources":["../../../home/runner/work/stanza/stanza/lib/display.js"],"sourcesContent":["import {SO, CONSEQUENCE, ALPHAMISSENSE, SIFT, POLYPHEN, DATASETS, ensureAllDatasets} from \"./constants\";\nimport {sortBy} from \"./sort\";\n\nconst floatFormatter = digits => {\n  return new Intl.NumberFormat(\"en\", {\n    minimumFractionDigits: digits,\n    maximumFractionDigits: digits,\n  });\n};\n\nconst fractionDigits3 = floatFormatter(3);\n\nexport const refAlt = (ref, alt) => {\n  const ref_length = ref?.length || 0;\n  const alt_length = alt?.length || 0;\n\n  if (!ref) {\n    ref = \"\";\n  }\n  if (!alt) {\n    alt = \"\";\n  }\n\n  if (ref_length > 4) {\n    ref = ref.slice(0, 4) + \"...\";\n  }\n  if (alt_length > 4) {\n    alt = alt.slice(0, 4) + \"...\";\n  }\n\n  return {ref, alt, ref_length, alt_length};\n};\n\nexport const variantType = accession => ({type: SO[accession]?.label || \"Unknown\"});\n\nexport const frequency = (count, frequency) => {\n  const level = ((ac, f) => {\n    if (isNaN(ac)) {\n      return \"na\";\n    } else if (ac === 0) {\n      return \"monomorphic\";\n    } else if (ac === 1) {\n      return \"singleton\";\n    } else if (f < 0.0001) {\n      return \"<0.0001\";\n    } else if (0.0001 <= f && f < 0.001) {\n      return \"<0.001\";\n    } else if (0.001 <= f && f < 0.01) {\n      return \"<0.01\";\n    } else if (0.01 <= f && f < 0.05) {\n      return \"<0.05\";\n    } else if (0.05 <= f && f < 0.5) {\n      return \"<0.5\";\n    } else if (0.5 <= f && f) {\n      return \"â‰¥0.5\";\n    } else {\n      return \"na\";\n    }\n  })(count, frequency);\n\n  frequency = ((v) => {\n    if (v === 0) {\n      return \"0.0\";\n    } else if (v === 1) {\n      return \"1.0\";\n    } else if (v < 0.001) {\n      return v.toExponential(3);\n    } else {\n      return fractionDigits3.format(frequency);\n    }\n  })(frequency);\n\n  return {frequency, count, level};\n};\n\nexport const consequence = accession => ({most_severe_consequence: CONSEQUENCE[accession]?.label || \"\"});\n\nexport const \talphaMissense = value => {\n  value = parseFloat(value);\n\n  if (isNaN(value)) {\n    return {};\n  }\n\n  let rank;\n  switch (true) {\n    case (value > 0.564):\n      rank = ALPHAMISSENSE[\"likely_pathogenic\"]\n      break\n    case (value >= 0.34):\n      rank = ALPHAMISSENSE[\"ambiguous\"]\n      break\n    default:\n      rank = ALPHAMISSENSE[\"likely_benign\"]\n      break\n  }\n\n  return {\n    alpha_missense: fractionDigits3.format(value),\n    alpha_missense_class: rank?.key,\n    alpha_missense_label: rank?.label,\n  };\n};\n\nexport const sift = value => {\n  value = parseFloat(value);\n\n  if (isNaN(value)) {\n    return {};\n  }\n\n  const rank = (value >= 0.05) ? SIFT[\"tolerated\"] : SIFT[\"deleterious\"];\n\n  return {\n    sift: fractionDigits3.format(value),\n    sift_class: rank?.key,\n    sift_label: rank?.label,\n  };\n};\n\nexport const polyphen = value => {\n  value = parseFloat(value);\n\n  if (isNaN(value)) {\n    return {};\n  }\n\n  let rank = POLYPHEN[\"unknown\"];\n  if (value > 0.908) {\n    rank = POLYPHEN[\"probably_damaging\"];\n  } else if (value > 0.446) {\n    rank = POLYPHEN[\"possibly_damaging\"];\n  } else {\n    rank = POLYPHEN[\"benign\"];\n  }\n\n  return {\n    polyphen: fractionDigits3.format(value),\n    polyphen_class: rank?.key,\n    polyphen_label: rank?.label,\n  };\n};\n\nexport const transformRecord = (record, assembly) => {\n  Object.assign(record, variantType(record.type));\n  Object.assign(record, refAlt(record.reference, record.alternate));\n\n  if (record.existing_variations && record.existing_variations.length) {\n    Object.assign(record, { dbsnp: record.existing_variations[0] });\n  }\n\n  record.frequencies = ensureAllDatasets(record.frequencies, assembly);\n  record.frequencies.forEach(x => Object.assign(x, frequency(x.ac, x.af)));\n\n  Object.assign(record, consequence(record.most_severe_consequence));\n  if (record.transcripts && record.transcripts.length > 1) {\n    record.consequence_badge = `${record.transcripts.length - 1}+`;\n  }\n\n  Object.assign(record, sift(record.sift));\n  Object.assign(record, polyphen(record.polyphen));\n\n  if (record.significance && record.significance.length > 1) {\n    record.significance_badge = `${record.significance.length - 1}+`;\n  }\n  if (record.significance && record.significance[0].conditions.length > 0) {\n    record.significance = {\n      condition: record.significance[0].conditions[0].name,\n      interpretation: record.significance[0].interpretations[0]\n    };\n  }\n\n  return record;\n}\n"],"names":[],"mappings":"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"}
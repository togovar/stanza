{"version":3,"file":"disease-mgend.js","sources":["../../../home/runner/work/stanza/stanza/stanzas/disease-mgend/index.js"],"sourcesContent":["import Stanza from \"togostanza/stanza\";\n\nimport { CLINICAL_SIGNIFICANCE } from \"@/lib/constants\";\nimport { rowSpanize } from \"@/lib/table\";\n\nexport default class DiseaseMGeND extends Stanza {\n  async render() {\n    this.importWebFontCSS(\"https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400,700,900\");\n\n    const { \"data-url\": dataURL, term } = this.params;\n\n    try {\n      const response = await fetch(dataURL, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: {\n            \"and\": [\n              {\n                \"disease\": {\n                  \"relation\": \"eq\",\n                  \"terms\": [\n                    term\n                  ]\n                }\n              },\n              {\n                \"significance\": {\n                  \"relation\": \"ne\",\n                  \"terms\": [\n                    \"NC\"\n                  ],\n                  \"source\": [\n                    \"mgend\"\n                  ]\n                }\n              }\n            ]\n          }\n        })\n      });\n\n      // レスポンスのステータスをチェックし、問題があればエラーをスロー\n      if (!response.ok) {\n        throw new Error(`${dataURL} returned status ${response.status}`);\n      }\n\n      const jsonData = await response.json();\n\n      this.renderTemplate({\n        template: \"stanza.html.hbs\",\n        parameters: {\n          params: this.params,\n          result: extractConditions(jsonData)\n        }\n      });\n    } catch (error) {\n      console.error(error)\n      this.renderTemplate({\n        template: \"stanza.html.hbs\",\n        parameters: {\n          params: this.params\n        }\n      });\n    }\n\n    // テーブルのセルを結合\n    rowSpanize(this.root.querySelector(\"#target\"));\n\n    // データのバインディングを整形\n    function extractConditions(data) {\n      const results = [];\n\n      data.data.forEach(item => {\n        const significance = item.significance;\n        significance.forEach(entry => {\n          if (entry.conditions && Array.isArray(entry.conditions)) {\n            if (entry.source === \"mgend\") {\n              results.push({\n                tgvid: item.id,\n                rs: item.existing_variations,\n                position: `${item.chromosome}:${item.position}`,\n                title: item.external_link.mgend[0].title,\n                xref: item.external_link.mgend[0].xref,\n                interpretation_class: entry.interpretations[0],\n                interpretation: getPropertyNameByKey(entry.interpretations[0]),\n              });\n            }\n          }\n        });\n      });\n\n      return sortAndGroupByInterpretationClass(results)\n    }\n\n    function getPropertyNameByKey(key) {\n      const entry = Object.entries(CLINICAL_SIGNIFICANCE).find(\n        ([, value]) => value.key === key\n      );\n      return entry ? entry[0] : null; // プロパティ名（キー名）を返す\n    }\n\n    function sortAndGroupByInterpretationClass(results) {\n      // グループ化\n      const grouped = results.reduce((acc, item) => {\n        const key = item.interpretation_class;\n        if (!acc[key]) {\n          acc[key] = [];\n        }\n        acc[key].push(item);\n        return acc;\n      }, {});\n\n      // 各グループを大文字・小文字で並び替え\n      Object.keys(grouped).forEach(key => {\n        grouped[key] = grouped[key]\n          .filter((item, index, array) => {\n            return array.findIndex(i => i.tgvid === item.tgvid) === index;\n          });\n      });\n\n      // グループ化を解除して並び替えたデータを平坦化\n      return Object.values(grouped).flat();\n    }\n  }\n}\n"],"names":[],"mappings":"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"}